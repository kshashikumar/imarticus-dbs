<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
        
        <context:annotation-config/>
        <context:component-scan base-package="com.dbs.practice1"/>
        
        <!-- 
        <aop:config>
        	<aop:aspect id="log" ref="logging">
        		<aop:pointcut expression="execution(* com.dbs.practice1.beans.Employee.get*(..)))" id="all"/>
        		<aop:after pointcut-ref="all" method="afterAdvice"/>
        		<aop:before pointcut-ref="all" method="beforeAdvice"/>
        		<aop:after-returning pointcut-ref="all" method="afterReturningAdvice" returning="val"/>
        	</aop:aspect>
        </aop:config>
         -->
        
        <bean id="logging" class="com.dbs.practice1.log.Logging"/>
        
</beans>